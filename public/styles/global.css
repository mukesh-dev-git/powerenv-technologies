/* public/styles/global.css */

/* 1. CSS Variables (Your Brand's Design Language) */
:root {
  --primary-blue: #0A2342;
  --secondary-green: #2CA58D;
  --neutral-light-gray: #F4F6F8;
  --neutral-dark-gray: #333333;
  --text-light: #FFFFFF;
  --font-heading: 'Montserrat', sans-serif;
  --font-body: 'Lato', sans-serif;
  --transition-smooth: all 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  --shadow-soft: 0 4px 20px rgba(0, 0, 0, 0.1);
  --shadow-hover: 0 8px 30px rgba(0, 0, 0, 0.15);
}

/* 2. Global Resets and Base Styles */
* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

html {
  scroll-behavior: smooth;
}

body {
  font-family: var(--font-body);
  background-color: var(--neutral-light-gray);
  color: var(--neutral-dark-gray);
  line-height: 1.6;
  overflow-x: hidden; /* Prevent horizontal scroll during animations */
}

/* Locomotive Scroll styling - with fallbacks */
[data-scroll-container] {
  height: auto; /* Changed from 100vh to auto for fallback */
  min-height: 100vh;
}

/* Only apply overflow hidden if Locomotive is successfully initialized */
.locomotive-initialized [data-scroll-container] {
  height: 100vh;
  overflow: hidden;
}

/* Fallback for when Locomotive fails */
.locomotive-failed [data-scroll-container] {
  height: auto !important;
  overflow: visible !important;
}

/* 3. Typography */
h1, h2, h3, h4, h5, h6 {
  font-family: var(--font-heading);
  color: var(--primary-blue);
  line-height: 1.2;
  margin-bottom: 1rem;
}

h1 { 
  font-size: 3rem; 
  font-weight: 700;
  letter-spacing: -0.02em;
}

h2 { 
  font-size: 2.25rem; 
  font-weight: 600;
  letter-spacing: -0.01em;
}

h3 { 
  font-size: 1.5rem; 
  font-weight: 600;
}

p {
  margin-bottom: 1rem;
  max-width: 65ch; /* Improves readability */
  line-height: 1.7;
}

a {
  color: var(--secondary-green);
  text-decoration: none;
  transition: var(--transition-smooth);
  position: relative;
}

a:hover {
  color: var(--primary-blue);
}

/* Subtle underline animation for text links */
a:not(.button-primary):not(.button-secondary)::after {
  content: '';
  position: absolute;
  width: 0;
  height: 2px;
  bottom: -2px;
  left: 0;
  background-color: var(--secondary-green);
  transition: width 0.3s ease;
}

a:not(.button-primary):not(.button-secondary):hover::after {
  width: 100%;
}

/* 4. Reusable Components & Utility Classes */
.container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 0 1.5rem;
}

.button-primary {
  display: inline-block;
  background: linear-gradient(135deg, var(--secondary-green) 0%, #248A73 100%);
  color: var(--text-light);
  padding: 1rem 2rem;
  border-radius: 8px;
  font-weight: 600;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  transition: var(--transition-smooth);
  border: none;
  cursor: pointer;
  position: relative;
  overflow: hidden;
  box-shadow: var(--shadow-soft);
}

.button-primary::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
  transition: left 0.5s;
}

.button-primary:hover {
  color: var(--text-light);
  transform: translateY(-3px);
  box-shadow: var(--shadow-hover);
}

.button-primary:hover::before {
  left: 100%;
}

.button-primary:active {
  transform: translateY(-1px);
}

section {
  padding: 6rem 0;
  position: relative;
}

/* Animation utilities */
.fade-in {
  opacity: 0;
  transform: translateY(30px);
  transition: opacity 0.8s ease-out, transform 0.8s ease-out;
}

.fade-in.visible {
  opacity: 1;
  transform: translateY(0);
}

.slide-in-left {
  opacity: 0;
  transform: translateX(-50px);
}

.slide-in-right {
  opacity: 0;
  transform: translateX(50px);
}

.scale-in {
  opacity: 0;
  transform: scale(0.9);
}

/* Hero Section Enhancements */
.hero {
  min-height: 100vh;
  display: flex;
  align-items: center;
  background: linear-gradient(135deg, var(--neutral-light-gray) 0%, #E8F4F1 100%);
  position: relative;
  overflow: hidden;
}

.hero::before {
  content: '';
  position: absolute;
  top: -50%;
  right: -50%;
  width: 100%;
  height: 200%;
  background: radial-gradient(circle, rgba(44, 165, 141, 0.1) 0%, transparent 70%);
  animation: float 6s ease-in-out infinite;
}

/* Add subtle grid pattern */
.hero::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: 
    linear-gradient(rgba(44, 165, 141, 0.03) 1px, transparent 1px),
    linear-gradient(90deg, rgba(44, 165, 141, 0.03) 1px, transparent 1px);
  background-size: 50px 50px;
  opacity: 0.5;
  animation: gridPulse 4s ease-in-out infinite;
}

@keyframes gridPulse {
  0%, 100% { opacity: 0.3; }
  50% { opacity: 0.6; }
}

@keyframes float {
  0%, 100% { transform: translateY(0px) rotate(0deg); }
  50% { transform: translateY(-20px) rotate(2deg); }
}

.hero-content {
  position: relative;
  z-index: 2;
}

.hero h1 {
  margin-bottom: 1.5rem;
  background: linear-gradient(135deg, var(--primary-blue) 0%, var(--secondary-green) 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

.sub-headline {
  font-size: 1.25rem;
  margin-bottom: 2rem;
  color: var(--neutral-dark-gray);
  max-width: 60ch;
}

/* Card Enhancements */
.solution-card, .step-card {
  background: white;
  padding: 2rem;
  border-radius: 12px;
  box-shadow: var(--shadow-soft);
  transition: var(--transition-smooth);
  position: relative;
  overflow: hidden;
}

.solution-card::before, .step-card::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
  background: linear-gradient(90deg, var(--secondary-green), var(--primary-blue));
  transform: scaleX(0);
  transition: transform 0.3s ease;
}

.solution-card:hover, .step-card:hover {
  transform: translateY(-8px);
  box-shadow: var(--shadow-hover);
}

.solution-card:hover::before, .step-card:hover::before {
  transform: scaleX(1);
}

.icon-wrapper {
  color: var(--secondary-green);
  margin-bottom: 1rem;
  transition: var(--transition-smooth);
}

.solution-card:hover .icon-wrapper, .step-card:hover .icon-wrapper {
  transform: scale(1.1);
  color: var(--primary-blue);
}

/* Grid layouts */
.solution-grid, .steps-grid {
  display: grid;
  gap: 2rem;
  margin-top: 3rem;
}

.solution-grid {
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
}

.steps-grid {
  grid-template-columns: 1fr auto 1fr auto 1fr;
  align-items: center;
}

.step-arrow {
  font-size: 2rem;
  color: var(--secondary-green);
  font-weight: bold;
}

.step-number {
  width: 60px;
  height: 60px;
  background: linear-gradient(135deg, var(--secondary-green) 0%, var(--primary-blue) 100%);
  color: white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.5rem;
  font-weight: bold;
  margin: 0 auto 1rem;
  transition: var(--transition-smooth);
}

.step-card:hover .step-number {
  transform: scale(1.1);
}

/* Problem Section */
.problem-section {
  background: linear-gradient(135deg, var(--primary-blue) 0%, #0E2A4A 100%);
  color: white;
}

.problem-section h2, .problem-section p {
  color: white;
}

.problem-content {
  display: grid;
  grid-template-columns: auto 1fr;
  gap: 3rem;
  align-items: center;
}

.stat-column {
  text-align: center;
}

.stat-number {
  font-size: 4rem;
  font-weight: 700;
  color: var(--secondary-green);
  display: block;
  line-height: 1;
}

.stat-label {
  font-size: 1.25rem;
  font-weight: 600;
  margin-top: 0.5rem;
}

/* Responsive Design */
@media (max-width: 1024px) {
  .steps-grid {
    grid-template-columns: 1fr;
    gap: 1rem;
  }
  
  .step-arrow {
    transform: rotate(90deg);
    margin: 1rem 0;
  }
  
  .problem-content {
    grid-template-columns: 1fr;
    text-align: center;
    gap: 2rem;
  }
}

@media (max-width: 768px) {
  h1 { font-size: 2.25rem; }
  h2 { font-size: 1.75rem; }
  section { padding: 4rem 0; }
  
  .hero {
    min-height: 80vh;
  }
  
  .solution-grid {
    grid-template-columns: 1fr;
  }
  
  .stat-number {
    font-size: 3rem;
  }
  
  .button-primary {
    padding: 0.75rem 1.5rem;
  }
}
